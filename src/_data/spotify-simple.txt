require('dotenv').config();

const EleventyFetch = require('@11ty/eleventy-fetch');
const fetch = require('node-fetch');

// https://developer.spotify.com/documentation/web-api/reference/#/operations/get-users-top-artists-and-tracks
// const ARTISTS_ENDPOINT = 'https://api.spotify.com/v1/me/top/artists';
// const TRACKS_ENDPOINT = 'https://api.spotify.com/v1/me/top/tracks';
const PLAYLIST = '3ucVPXXcec1aQU82yBJxl3';
const PLAYLIST_ENDPOINT = `https://api.spotify.com/v1/playlists/${PLAYLIST}`;
const TOKEN_ENDPOINT = 'https://accounts.spotify.com/api/token';
// Only get the top 5
const LIMIT = 5;
// Set to short_term to get some variation
const TIME_RANGE = 'short_term';

module.exports = async function () {
  // Base64 encode the auth
  const auth = Buffer.from(
    `${process.env.SPOTIFY_CLIENT_ID}:${process.env.SPOTIFY_CLIENT_SECRET}`
  ).toString('base64');

  const options = {
    method: 'POST',
    headers: {
      'Authorization': `Basic ${auth}`,
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: new URLSearchParams({
      grant_type: 'client_credentials',
      client_id: process.env.SPOTIFY_CLIENT_ID,
      client_secret: process.env.SPOTIFY_CLIENT_SECRET
    })
  };

  const accessToken = await fetch(TOKEN_ENDPOINT, options)
    .then(res => {
      // Log the response from the token request
      console.log('Token Response:', res.status, res.statusText);
      console.log('auth code:', auth);
      return res.json();
    })
    .then(json => json.access_token)
    .catch(console.error);

  // Build playlist query
  const playlistUrl = new URL(PLAYLIST_ENDPOINT);
  // playlistUrl.searchParams.set('limit', LIMIT);
  // playlistUrl.searchParams.set('time_range', TIME_RANGE);

  const playlist = await EleventyFetch(playlistUrl.toString(), {
    duration: '1h',
    type: 'json',
    fetchOptions: {
      headers: {
        Authorization: `Bearer ${accessToken}`
      }
    }
  });

  // console.log('playlist:', playlist?.tracks?.items ?? []);

  return {
    playlist: playlist?.tracks?.items ?? []
  };
};
